#!/usr/bin/env bash
#
# Print resource utilization in a nice
# visual format
#
# Author: Dave Eddy <dave@daveeddy.com>
# Date: 3/4/12

# Load the lib
. lib.bash || exit 1

# Check to see if we have the global zone
out=$(zoneadm list -p)
if (( $(wc -l <<< "$out") == 1 )); then
	# Only one zone found, use it
	IFS=: read -r report_zoneid _ <<< "$out"
else
	# Multiple zones, assume global unless -z is supplied
	report_zoneid=0
fi

#
# Display usage
#
usage() {
	cat <<-EOF
	Usage: ${0##*/} [ options ] [ <interval> [ <count> ] ]

	Print a visual representation of CPU and memory utilization on an
	Illumos based operating system using prstat(1M)

	Example Usage: ${0##*/} -c 30 -b '#' -z 0 1 5
	- Report on zone 0 for 5 times at 1 second intervals,
	  reserving 30 characters for the bar graph using # as
	  the graph character

	-b <char>    : Character to use for the bar graph
	-c <columns> : Number of columns to use for the bar graph
	-n           : Disable color output
	-h           : Print this help message
	-z <zoneid>  : Zone ID to report on

	EOF
}

#
# Main function
#
# Generate output and print it
#
main() {
	# Grab the out of prstat
	prstat_output=$(prstat -n 1 -Z 1 1)

	# Loop the output of prstat and extract the meaninful fields
	flag=false
	while read zoneid nproc swap rss memory time cpu zone; do
		# Check to see if we are at the zone portion of prstat
		if [[ "$zoneid" == "ZONEID" ]]; then
			flag=true
			continue
		fi

		# If we are at the line with the zone we are interested save the info
		if "$flag" && [[ "$report_zoneid" == "$zoneid" ]]; then
			break
		fi
	done <<< "$prstat_output"

	# Print the memory and CPU usage
	printf "${green}Zone: ${reset}${cyan}%s ${magenta}(${yellow}%s${magenta})\n" \
		"$zoneid" "$zone"

	printf "${green}Mem:  ${bold}${blue}[${reset}${red}%-*s${bold}${blue}]${reset} ${cyan}%s\n" \
		"$columns" "$(print_bars "$memory")" "$memory"

	printf "${green}CPU:  ${bold}${blue}[${reset}${red}%-*s${bold}${blue}]${reset} ${cyan}%s\n" \
		"$columns" "$(print_bars "$cpu")"    "$cpu"

	# Print the bottom line of prstat
	echo -n "$green"
	tail -1 <<< "$prstat_output"

	# Reset all colors
	echo -n "$reset"
}

# Get command line options
while getopts "b:c:nz:h" options; do
	case "$options" in
		b) bar_character=$OPTARG;;
		c) columns=$OPTARG;;
		n) color=false;;
		z) report_zoneid=$OPTARG;;
		h) usage >&2; exit 0;;
		*) usage >&2; exit 1;;
	esac
done
shift $(($OPTIND-1))

# Check if zone exists
if ! zone_exists "$report_zoneid"; then
	echo "Zone ID ($report_zoneid) doesn't exist!" >&2
	exit 1
fi

# Check if colors should be loaded
"$color" && load_colors

# Start it!
start "$@"
